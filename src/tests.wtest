import soundProducer.*
import wollok.game.*
import configuracion.*
import tablero.*
import personaje.*
import direcciones.*
import nivel1.*
import nivel2.*

describe "Inicializacion"{
	method initialize(){
		config.configuracionInicial()
	}
	
	test "Deberia setear correctamente el nombre del juego"{
		const gameName = "Carpinchos al ataque!"
		assert.equals(game.title(),gameName)
	}
	
	test "Deberia setear correctamente el tama√±o de la consola"{
		const height = 11
		const width = 18
		assert.equals(game.height(),height)
		assert.equals(game.width(),width)
	}
	
	/*test "Deberia setear correctamente conjunto de paredes"{
		const primerParedPosicionX = 0
		const primerParedPosicionY = 0
		const ultimaParedPosicionX = 17
		
		assert.equals(config.nivelActual().hayAlgo(new Pared(),game.at(primerParedPosicionX,primerParedPosicionY)),true)
		assert.equals(config.nivelActual().hayAlgo(new Pared(),game.at(ultimaParedPosicionX,primerParedPosicionY)),true)
	}*/
	
	test "Deberia setear correctamente casilleros"{
		assert.that(true)
	}
	
	test "Deberia setear correctamente caminos"{
		assert.that(true)
	}
	
	test "Deberia setear correctamente enemigos"{
		const enemigo = new Enemigo(direccionActual = derecha, posicion = game.at(6,1))
		const enemigoEnElJuego = (game.getObjectsIn(game.at(6,1))).last()
		assert.equals(enemigo.direccionActual(),enemigoEnElJuego.direccionActual())
		assert.that(enemigo.esLetal())
		assert.that(enemigoEnElJuego.esLetal())
	}
	
	test "Deberia setear correctamente personaje principal"{
		const carpincho = new Protagonista(posicion = game.at(1,1))
		const carpinchoEnElJuego = (game.getObjectsIn(game.at(1,1))).last()
		assert.equals(carpincho.position(),carpinchoEnElJuego.position())
		assert.equals(carpincho.esLetal(),carpinchoEnElJuego.esLetal())
		assert.that(not(carpincho.esLetal()))
		assert.that(not(carpinchoEnElJuego.esLetal()))
	}		
}

/**
Unit tests personaje
*/
describe "Personaje"{
	const personaje = new Personaje()
	
	test "Posicion"{
		assert.equals(personaje.posicion(),game.at(0,0))
	}
	
	test "Imagen"{
		assert.equals(personaje.image(),"personaje_derecha.png")
	}
	
	test "Set Posicion"{
		const newPosicion = game.at(2,1)
		personaje.posicion(newPosicion)
		assert.equals(personaje.posicion(),newPosicion)
	}
	
	test "puedePisarse"{
		assert.that(personaje.puedePisarse())
	}
	
	test "esLetal"{
		assert.that(not(personaje.esLetal()))
	}
}

/**
Unit tests protagonista 
*/
describe "Protagonista"{
	const protagonista = new Protagonista()
}


/**
Unit tests enemigo 
*/
describe "Enemigo"{
	const enemigo = new Enemigo()
	
	test "Imagen"{
		assert.equals(enemigo.image(),"enemigo_derecha.png")
	}
	
	test "direccion"{
		assert.equals(enemigo.direccionActual(),derecha)
	}
	
	test "esLetal"{
		assert.that(enemigo.esLetal())
	}
}
